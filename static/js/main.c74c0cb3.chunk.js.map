{"version":3,"sources":["ImageGalleryItem/ImageGalleryItem.module.css","Modal/Modal.module.css","ImageGallery/ImageGallery.module.css","Button/Button.module.css","Loader/Loader.module.css","Searchbar/Searchbar.module.css","App.module.css","ImgApi.js","Searchbar/Searchbar.js","ImageGalleryItem/ImageGalleryItem.js","ImageGallery/ImageGallery.js","Modal/Modal.js","Button/Button.js","Loader/Loader.js","App.js","index.js"],"names":["module","exports","fetchHits","searchQuery","currentPage","pageSize","axios","get","then","response","data","hits","Searchbar","onSubmit","useState","query","setQuery","className","styles","SearchForm","e","preventDefault","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","value","onChange","currentTarget","autoComplete","autoFocus","placeholder","ImageGalleryItem","webformatURL","onClick","tags","src","alt","ImageGalleryItemImage","ImageGallery","onOpenModalImg","map","id","largeImageURL","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","onKeyDown","removeEventListener","code","createPortal","overlay","target","modal","Button","button","Spiner","color","loader","App","setHits","setSearchQuery","setCurrentPage","isLoading","setIsLoading","error","setError","setLargeImageURL","ImgApi","prevState","scrollTo","top","body","scrollHeight","behavior","catch","finally","Loader","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c74c0cb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__Nczto\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1_5Nm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__H9unx\",\"modal\":\"Modal_modal__2mHeJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1Qqmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__fTZ3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3kKOH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2nPLW\",\"SearchForm\":\"Searchbar_SearchForm__w_k6g\",\"SearchFormButton\":\"Searchbar_SearchFormButton__21mXX\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2Vcsc\",\"SearchFormInput\":\"Searchbar_SearchFormInput__37tAi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1U3Xa\"};","import axios from 'axios';\r\nconst KEY = '21944568-357b711266e3368e889ab4e4f';\r\n\r\nconst fetchHits = ({ searchQuery = '', currentPage = 1, pageSize = 12 }) => {\r\n    return axios\r\n        .get(\r\n        `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=${pageSize}`,\r\n    )\r\n    .then(response =>response.data.hits)\r\n}\r\n\r\nexport default fetchHits;","import { useState } from 'react';\r\nimport styles from './Searchbar.module.css';\r\n\r\nfunction Searchbar({onSubmit}) {\r\n    const [query, setQuery] = useState('');\r\n\r\n\r\n    const inputChange = e => {\r\n        setQuery(e.currentTarget.value)\r\n    }\r\n\r\n    const inputSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit(query);\r\n        setQuery('')\r\n    }\r\n\r\n    \r\n    return (\r\n        <header className={styles.Searchbar}>\r\n            <form\r\n                className={styles.SearchForm}\r\n                onSubmit={inputSubmit}\r\n            >\r\n                <button type=\"submit\" className={styles.SearchFormButton}>\r\n                    <span className={styles.SearchFormButtonLabel}>Search</span>\r\n                </button>\r\n\r\n                <input\r\n                    className={styles.SearchFormInput}\r\n                    type=\"text\"\r\n                    value={query}\r\n                    onChange={inputChange}\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                />\r\n            </form>\r\n        </header>\r\n    );\r\n    \r\n}\r\nexport default Searchbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ImageGalleryItem.module.css'\r\n\r\nconst ImageGalleryItem = ({webformatURL, onClick, tags})=> {\r\n    return (\r\n        <li className={styles.ImageGalleryItem}>\r\n            <img\r\n                src={webformatURL}\r\n                alt={tags}\r\n                className={styles.ImageGalleryItemImage}\r\n                onClick={onClick}    \r\n            />\r\n        </li>\r\n    )\r\n}\r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport styles from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({hits, onOpenModalImg})=> {\r\n    return (\r\n        <ul className={styles.ImageGallery}>\r\n            {hits.map(({ id, webformatURL, largeImageURL }) => {\r\n                const onImgClick=()=>onOpenModalImg(largeImageURL)\r\n                return (\r\n                    <li key={id}>\r\n                        <ImageGalleryItem\r\n                            webformatURL={webformatURL}\r\n                            onClick={onImgClick}\r\n                        />\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\nImageGallery.propTypes = {\r\n    hits: PropTypes.array.isRequired,\r\n    onOpenModalImg: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport styles from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nfunction Modal({ onClose, src, alt }) {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', onKeyDown);\r\n        return () => window.removeEventListener('keydown', onKeyDown)\r\n    })\r\n\r\n    const onKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            onClose();\r\n        };\r\n    };\r\n\r\n    const onOverlayClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            onClose();\r\n        };\r\n    };\r\n\r\n    return createPortal(\r\n        <div className={styles.overlay} onClick={onOverlayClick}>\r\n            <div className={styles.modal}>\r\n                <img\r\n                    src={src}\r\n                    alt={alt}\r\n                ></img>\r\n            </div>\r\n        </div>,\r\n        modalRoot\r\n    );\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Button.module.css'\r\n\r\nconst Button = ({ onClick }) => (\r\n    <button className={styles.button} type=\"button\" onClick={onClick}>\r\n        Load more\r\n    </button>\r\n    );\r\n\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Button;","import Loader from \"react-loader-spinner\";\r\nimport styles from './Loader.module.css';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst Spiner = () => (\r\n    <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#3f51b5\"\r\n        className={styles.loader}\r\n    />\r\n);\r\n\r\nexport default Spiner;","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ImgApi from './ImgApi';\nimport Searchbar from './Searchbar';\nimport ImageGallery from './ImageGallery';\nimport Modal from './Modal';\nimport Button from './Button';\nimport Loader from './Loader';\nimport  './App.module.css';\n\n\n\nfunction App () {\n  const [hits, setHits] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [tags, setTags] = useState('');\n  const [error, setError] = useState('');\n  const [largeImageURL, setLargeImageURL] = useState('');\n\n  \n  const onChangeQuery = query => {\n    setSearchQuery(query);\n    setCurrentPage(1);\n    setHits([]);\n    setError(null);\n  }\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return\n    }\n\n    setIsLoading(true);\n    \n    ImgApi({ searchQuery: searchQuery, currentPage }).then(hits => {\n      setHits(prevState => [...prevState, ...hits]);\n    })\n      .then(() => {\n        window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => setError({ error: 'No pictures found' })).finally(() => setIsLoading(false))\n    \n  }, [searchQuery, currentPage])\n  \n\n\n  const toggleModal = () => {\n    setLargeImageURL('')\n  }\n\n  const onOpenModalImg = (largeImageURL) => {\n    setLargeImageURL(largeImageURL)\n  };\n\n\n \n  return (\n    <>\n      <Searchbar\n        onSubmit={onChangeQuery}\n      />\n      {error && <p>{error}</p>}\n\n      <ImageGallery\n        hits={hits}\n        onOpenModalImg={onOpenModalImg}\n      />\n\n      {isLoading &&\n        <Loader />}\n      \n      {hits.length > 11 && !isLoading && (\n        <Button\n          onClick={()=>setCurrentPage(currentPage + 1) }\n        />\n      )}\n\n      {largeImageURL && (\n        <Modal\n          src={largeImageURL}\n          alt={tags}\n          onClose={toggleModal}\n        />\n\n      )}\n    </>\n  )\n}\n\nApp.propTypes = {\n  hits: PropTypes.array,\n  searchQuery: PropTypes.string,\n  currentPage: PropTypes.number,\n  isLoading: PropTypes.bool,\n  showModal: PropTypes.bool,\n  tags: PropTypes.string,\n  error: PropTypes.string,\n  largeImageURL: PropTypes.string\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}